/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TvShowsIndexImport } from './routes/tvShows/index'
import { Route as PeopleIndexImport } from './routes/people/index'
import { Route as MovieIndexImport } from './routes/movie/index'
import { Route as TvShowsTvshowIdImport } from './routes/tvShows/$tvshowId'
import { Route as PeoplePeopleIdImport } from './routes/people/$peopleId'
import { Route as MovieMovieIdImport } from './routes/movie/$movieId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TvShowsIndexRoute = TvShowsIndexImport.update({
  id: '/tvShows/',
  path: '/tvShows/',
  getParentRoute: () => rootRoute,
} as any)

const PeopleIndexRoute = PeopleIndexImport.update({
  id: '/people/',
  path: '/people/',
  getParentRoute: () => rootRoute,
} as any)

const MovieIndexRoute = MovieIndexImport.update({
  id: '/movie/',
  path: '/movie/',
  getParentRoute: () => rootRoute,
} as any)

const TvShowsTvshowIdRoute = TvShowsTvshowIdImport.update({
  id: '/tvShows/$tvshowId',
  path: '/tvShows/$tvshowId',
  getParentRoute: () => rootRoute,
} as any)

const PeoplePeopleIdRoute = PeoplePeopleIdImport.update({
  id: '/people/$peopleId',
  path: '/people/$peopleId',
  getParentRoute: () => rootRoute,
} as any)

const MovieMovieIdRoute = MovieMovieIdImport.update({
  id: '/movie/$movieId',
  path: '/movie/$movieId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/movie/$movieId': {
      id: '/movie/$movieId'
      path: '/movie/$movieId'
      fullPath: '/movie/$movieId'
      preLoaderRoute: typeof MovieMovieIdImport
      parentRoute: typeof rootRoute
    }
    '/people/$peopleId': {
      id: '/people/$peopleId'
      path: '/people/$peopleId'
      fullPath: '/people/$peopleId'
      preLoaderRoute: typeof PeoplePeopleIdImport
      parentRoute: typeof rootRoute
    }
    '/tvShows/$tvshowId': {
      id: '/tvShows/$tvshowId'
      path: '/tvShows/$tvshowId'
      fullPath: '/tvShows/$tvshowId'
      preLoaderRoute: typeof TvShowsTvshowIdImport
      parentRoute: typeof rootRoute
    }
    '/movie/': {
      id: '/movie/'
      path: '/movie'
      fullPath: '/movie'
      preLoaderRoute: typeof MovieIndexImport
      parentRoute: typeof rootRoute
    }
    '/people/': {
      id: '/people/'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof PeopleIndexImport
      parentRoute: typeof rootRoute
    }
    '/tvShows/': {
      id: '/tvShows/'
      path: '/tvShows'
      fullPath: '/tvShows'
      preLoaderRoute: typeof TvShowsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/movie/$movieId': typeof MovieMovieIdRoute
  '/people/$peopleId': typeof PeoplePeopleIdRoute
  '/tvShows/$tvshowId': typeof TvShowsTvshowIdRoute
  '/movie': typeof MovieIndexRoute
  '/people': typeof PeopleIndexRoute
  '/tvShows': typeof TvShowsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/movie/$movieId': typeof MovieMovieIdRoute
  '/people/$peopleId': typeof PeoplePeopleIdRoute
  '/tvShows/$tvshowId': typeof TvShowsTvshowIdRoute
  '/movie': typeof MovieIndexRoute
  '/people': typeof PeopleIndexRoute
  '/tvShows': typeof TvShowsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/movie/$movieId': typeof MovieMovieIdRoute
  '/people/$peopleId': typeof PeoplePeopleIdRoute
  '/tvShows/$tvshowId': typeof TvShowsTvshowIdRoute
  '/movie/': typeof MovieIndexRoute
  '/people/': typeof PeopleIndexRoute
  '/tvShows/': typeof TvShowsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/movie/$movieId'
    | '/people/$peopleId'
    | '/tvShows/$tvshowId'
    | '/movie'
    | '/people'
    | '/tvShows'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/movie/$movieId'
    | '/people/$peopleId'
    | '/tvShows/$tvshowId'
    | '/movie'
    | '/people'
    | '/tvShows'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/movie/$movieId'
    | '/people/$peopleId'
    | '/tvShows/$tvshowId'
    | '/movie/'
    | '/people/'
    | '/tvShows/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  MovieMovieIdRoute: typeof MovieMovieIdRoute
  PeoplePeopleIdRoute: typeof PeoplePeopleIdRoute
  TvShowsTvshowIdRoute: typeof TvShowsTvshowIdRoute
  MovieIndexRoute: typeof MovieIndexRoute
  PeopleIndexRoute: typeof PeopleIndexRoute
  TvShowsIndexRoute: typeof TvShowsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  MovieMovieIdRoute: MovieMovieIdRoute,
  PeoplePeopleIdRoute: PeoplePeopleIdRoute,
  TvShowsTvshowIdRoute: TvShowsTvshowIdRoute,
  MovieIndexRoute: MovieIndexRoute,
  PeopleIndexRoute: PeopleIndexRoute,
  TvShowsIndexRoute: TvShowsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/movie/$movieId",
        "/people/$peopleId",
        "/tvShows/$tvshowId",
        "/movie/",
        "/people/",
        "/tvShows/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/movie/$movieId": {
      "filePath": "movie/$movieId.tsx"
    },
    "/people/$peopleId": {
      "filePath": "people/$peopleId.tsx"
    },
    "/tvShows/$tvshowId": {
      "filePath": "tvShows/$tvshowId.tsx"
    },
    "/movie/": {
      "filePath": "movie/index.tsx"
    },
    "/people/": {
      "filePath": "people/index.tsx"
    },
    "/tvShows/": {
      "filePath": "tvShows/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
